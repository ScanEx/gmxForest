{
  "version": 3,
  "file": "gmxForest.css",
  "sources": [
    "..\\src\\App.html",
    "..\\src\\Table.html",
    "..\\src\\SelectInput.html"
  ],
  "sourcesContent": [
    "<script>\r\n\timport * as Requests from './Requests.js';\r\n\r\n\tconst stateStorage = Requests.getState();\r\n\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tstateSave: 1,\r\n\t\t\t\tchangedParams: {},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlayerID: {value: '', title: 'Выбор слоя'},\r\n\t\t\t\t\tquadrantLayerId: {value: '', title: 'Слой квартальной сети'},\r\n\t\t\t\t\treportType: {value: 'об использовании лесов', options: ['об использовании лесов', 'о воспроизводстве лесов'], title: 'Тип отчета'},\r\n\t\t\t\t\torganizationName: {value: 'Наименование организации'},\r\n\t\t\t\t\tinn: {value: '1234567890', title: 'ИНН'},\r\n\t\t\t\t\tregion: {value: 'Субъект', title: 'Субъект Российской Федерации'},\r\n\t\t\t\t\tforestry: {value: '', title: 'Лесничество'},\r\n\t\t\t\t\tsectionForestry: {value: 'Участковое лесничество'},\r\n\t\t\t\t\tquadrant: {value: 'Квартал'},\r\n\t\t\t\t\tstratum: {value: 'Выдел'},\r\n\t\t\t\t\tfellingForm: {value: '', title: 'Форма рубки'},\r\n\t\t\t\t\tfellingType: {value: '', title: 'Тип рубки'},\r\n\t\t\t\t\trecoveryEventType: {value: '', title: 'Тип лесовосстановительного мероприятия'},\r\n\t\t\t\t\tsiteArea: {value: 'Площадь'},\r\n\t\t\t\t\tscale: {value: 'Масштаб'},\r\n\t\t\t\t\tsite: {value: 'Делянка'}\r\n\t\t\t\t},\r\n\t\t\t\tlayerItems: [],\r\n\t\t\t\tformat: 2,\r\n\t\t\t\ttempl: '',\r\n\t\t\t\tnum_points: true,\r\n\t\t\t\tlimit: 0,\r\n\t\t\t\treport: false,\r\n\t\t\t\tdrawstart: false,\r\n\t\t\t\tlayerID: '',\r\n\t\t\t\tquadrantLayerId: '',\r\n\t\t\t\treportType: '',\r\n\t\t\t\tchecked: {},\r\n\t\t\t\tlayerIds: [], quadrantIds: [],\r\n\t\t\t\thashCols: {},\r\n\t\t\t\tcols: []\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tTable: './Table.html',\r\n\t\t\tSelectInput: './SelectInput.html'\r\n\t\t},\r\n\t\r\n\t\tmethods: {\r\n\t\t\tviewItem(id) {\r\n\t\t\t\tconst { map, layerItems, hashCols} = this.get();\r\n\r\n\t\t\t\tfor (let i = 0, len = layerItems.length; i < len; i++) {\r\n\t\t\t\t\tlet it = layerItems[i];\r\n\t\t\t\t\tif (id === it[hashCols.gmx_id]) {\r\n\t\t\t\t\t\tlet geo = it[hashCols.geomixergeojson],\r\n\t\t\t\t\t\t\tbbox = L.gmxUtil.getGeometryBounds(geo),\r\n\t\t\t\t\t\t\tlatlngBbox = L.latLngBounds([[bbox.min.y, bbox.min.x], [bbox.max.y, bbox.max.x]]);\r\n\t\t\t\t\t\tmap.fitBounds(latlngBbox);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsendReport() {\r\n\t\t\t\tconst {checked, layerItems, hashCols, params, format, layerID, gmxMap, changedParams, num_points, templ} = this.get();\r\n\t\t\t\tthis.set({report: true});\r\n\t\t\t\tRequests.sendReport(checked, layerItems, hashCols, params, format, layerID, gmxMap, changedParams, num_points, templ, this)\r\n\t\t\t\t.then(json => { this.set(json); });\r\n\t\t\t},\r\n\t\t\tstartDrawing(ev) {\r\n\t\t\t\tconst { map, drawstart, layerID, checked } = this.get();\r\n\t\t\t\tthis.set({drawstart: !drawstart});\r\n\t\t\t\tif(!drawstart) {\r\n\t\t\t\t\tmap.gmxDrawing.clear();\r\n\t\t\t\t\tmap.gmxDrawing.create('Polygon');\r\n\t\t\t\t\tmap.gmxDrawing.on('drawstop', (e) => {\r\n\t\t\t\t\t\tthis.set({drawstart: false});\r\n\t\t\t\t\t\tRequests.selectFeaturesWithDrawing(layerID, e.object.toGeoJSON().geometry)\r\n\t\t\t\t\t\t\t.then(json => {\r\n\t\t\t\t\t\t\t\tthis.set({checked: L.extend(json, checked)});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}, this);\r\n\t\t\t\t\tmap._gmxEventsManager._drawstart = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tgetKeyState(key) {\r\n\t\t\t\tconst {changedParams} = this.get();\r\n\t\t\t\treturn changedParams[key];\r\n\t\t\t},\r\n\t\t\tsetField(key, data) {\r\n\t\t\t\tconst {changedParams} = this.get();\r\n\t\t\t\tchangedParams[key] = data;\r\n\t\t\t\tthis.set({changedParams: changedParams});\r\n\t\t\t},\r\n\t\t\tsetNodeField(node, setFlag) {\r\n\t\t\t\tlet val = node.options ? node.options[node.selectedIndex].value : node.value,\r\n\t\t\t\t\tname = node.name;\r\n\t\t\t\tthis.setField(name, val);\r\n\t\t\t\tif (setFlag) {\r\n\t\t\t\t\tlet attr = {};\r\n\t\t\t\t\tattr[name] = val;\r\n\t\t\t\t\tif (name === 'layerID') {\r\n\t\t\t\t\t\tthis.clearChangedNodes();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set(attr);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcolsToHash(arr) {\r\n\t\t\t\treturn arr.reduce((a, v, i) => { a[v] = i; return a; }, {});\r\n\t\t\t},\r\n\r\n\t\t\tstyleHook(it) {\r\n\t\t\t\tconst { checked } = this.get();\r\n\t\t\t\treturn checked[it.id] ? { strokeStyle: '#00ffff' } : {};\r\n\t\t\t},\r\n\t\t\tloadState() {\r\n\t\t\t\tthis.set({changedParams: stateStorage});\r\n\t\t\t\tthis.checkState();\r\n\t\t\t},\r\n\t\t\tclearChangedNodes() {\r\n\t\t\t\tconst {changedParams} = this.get();\r\n\t\t\t\tfor(let key in changedParams) {\r\n\t\t\t\t\tlet node = this.refs[key];\r\n\r\n\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\t\tnode.value = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.set({reportType: '', changedParams:{}});\r\n\t\t\t},\r\n\t\t\tcheckState() {\r\n\t\t\t\tconst {changedParams} = this.get();\r\n\t\t\t\tlet target = this.options.target;\r\n\t\t\t\tfor(let key in changedParams) {\r\n\t\t\t\t\tlet it = changedParams[key],\r\n\t\t\t\t\t\tnode = this.refs[key];\r\n\r\n\t\t\t\t\tif (node) {\r\n\t\t\t\t\t\tif (typeof(it) !== 'object') {\r\n\t\t\t\t\t\t\tnode.value = it;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (key === 'reportType') {\r\n\t\t\t\t\t\tthis.set({reportType: it});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tloadFeatures() {\r\n\t\t\t\tconst { gmxMap, layerID, stateSave } = this.get();\r\n\t\t\t\tthis.currentLayer = gmxMap.layersByID[layerID];\r\n\t\t\t\tif (this.currentLayer) {\r\n\t\t\t\t\tthis.currentLayer.setStyleHook(this.styleHook.bind(this));\r\n\t\t\t\t}\r\n\t\t\t\tRequests.loadFeatures(layerID)\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tif (json.Status === 'ok') {\r\n\t\t\t\t\t\tlet cols = json.Result.fields,\r\n\t\t\t\t\t\t\tattr = {cols: cols, hashCols: this.colsToHash(cols),layerItems: json.Result.values};\r\n\t\t\t\t\t\tif (stateSave === 1 && Object.keys(stateStorage).length) {\r\n\t\t\t\t\t\t\tthis.refs.loadState.classList.remove('disabled');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.set(attr);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t},\r\n\t\tonstate({ changed, current, previous }) {\r\n\t\t\t// console.log('in onstate', changed, current);\r\n\t\t\tif (changed.gmxMap) {\r\n\t\t\t\tRequests.getLayersIds(current.meta, current.gmxMap).then(json => { this.set(json); });\r\n\t\t\t}\r\n\t\t\tif (changed.layerID && current.layerID) {\r\n\t\t\t\tthis.loadFeatures();\r\n\t\t\t\t/*\r\n\t\t\t\tconst { gmxMap, checked } = this.get();\r\n\t\t\t\tthis.currentLayer = gmxMap.layersByID[current.layerID];\r\n\t\t\t\tif (this.currentLayer) {\r\n\t\t\t\t\tthis.currentLayer.setStyleHook(this.styleHook.bind(this));\r\n\t\t\t\t}\r\n\t\t\t\tRequests.loadFeatures(current.layerID)\r\n\t\t\t\t.then(json => {\r\n\t\t\t\t\tif (json.Status === 'ok') {\r\n\t\t\t\t\t\tlet cols = json.Result.fields,\r\n\t\t\t\t\t\t\tattr = {cols: cols, hashCols: this.colsToHash(cols),layerItems: json.Result.values};\r\n\t\t\t\t\t\tif (current.stateSave === 1 && Object.keys(stateStorage).length) {\r\n\t\t\t\t\t\t\tthis.refs.loadState.classList.remove('disabled');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.set(attr);\r\n\t\t\t\t\t}\r\n\t\t\t\t});*/\r\n\t\t\t}\r\n\t\t\tif (changed.checked && this.currentLayer) {\r\n\t\t\t\tthis.currentLayer.repaint();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<div class=\"forest-plugin-container\">\r\n\t<div class=\"forest-plugin-header\">Лимит отчетов: {limit}</div>\r\n\t<div class=\"gmx-select-layer-container\">\r\n\t\t<span class=\"gmx-select-layer-container__label\">Выбор слоя</span>\r\n\t\t<select on:change=\"setNodeField(this, true)\" name=\"layerID\" class=\"gmx-sidebar-select-medium\">\r\n\t\t\t<option value=\"\"></option>\r\n\t\t\t{#if layerIds}\r\n\t\t\t\t{#each layerIds as it}\r\n\t\t\t\t\t<option value=\"{it.id}\" selected=\"{layerID === it.id}\">{it.title}</option>\r\n\t\t\t\t{/each}\r\n\t\t\t{/if}\r\n\t\t</select>\r\n\t</div>\r\n{#if layerID}\r\n\t<div class=\"leftContent forest-plugin-content\">\r\n\t\t\t<div class=\"gmx-sidebar-label-medium\">Ввод информации\r\n\t\t\t\t{#if stateSave}\r\n\t\t\t\t<i on:click=\"loadState()\" ref:loadState class=\"material-icons loadState disabled\" title=\"Загрузить выбор полей предыдущего отчета\"></i>\r\n\t\t\t\t{/if}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\r\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label\">{params.reportType.title}</div>\r\n\t\t\t\t\t\t<select on:change=\"setNodeField(this, true)\" name=\"reportType\" ref:reportType class=\"reportType gmx-sidebar-select-large\">\r\n{#each params.reportType.options as it}\r\n\t\t\t\t\t\t\t\t<option value=\"{it}\">{it}</option>\r\n{/each}\r\n\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n{#if reportType !== 'о воспроизводстве лесов'}\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<SelectInput key=\"fellingForm\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t\t<SelectInput key=\"fellingType\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t</div>\r\n{/if}\r\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\r\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label-small\">{params.organizationName.title || params.organizationName.value}</div>\r\n\t\t\t\t\t\t<input on:change=\"setNodeField(this)\" name=\"organizationName\" ref:organizationName value=\"{params.organizationName.value}\" type=\"text\" class=\"organizationName gmx-sidebar-input-large\">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\r\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label-small\">{params.inn.title || params.inn.value}</div>\r\n\t\t\t\t\t\t<input on:change=\"setNodeField(this)\" name=\"inn\" ref:inn value=\"{params.inn.value}\" type=\"text\" class=\"inn gmx-sidebar-input-large\">\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<SelectInput key=\"region\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"forestry\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"sectionForestry\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"quadrant\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"stratum\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"site\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"recoveryEventType\" bind:params bind:cols bind:changedParams />\r\n\t\t\t\t\t<SelectInput key=\"siteArea\" bind:params bind:cols bind:changedParams />\r\n\r\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\r\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label\">{params.scale.title || params.scale.value}</div>\r\n\t\t\t\t\t\t<select on:change=\"setNodeField(this, true)\" name=\"scale\" ref:scale class=\"scale gmx-sidebar-select-large\">\r\n\t\t\t\t\t\t\t\t<option value=\"5000\">1:5000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"10000\">1:10000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"15000\">1:15000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"20000\">1:20000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"25000\">1:25000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"30000\">1:30000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"35000\">1:35000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"40000\">1:40000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"45000\">1:45000</option>\r\n\t\t\t\t\t\t\t\t<option value=\"50000\">1:50000</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"gmx-sidebar-labeled-block\">\r\n\t\t\t\t\t\t<div class=\"gmx-sidebar-label\">{params.quadrantLayerId.title || params.quadrantLayerId.value}</div>\r\n\t\t\t\t\t\t<select on:change=\"setNodeField(this, true)\" name=\"quadrantLayerId\" ref:quadrantLayerId class=\"quadrantLayerId gmx-sidebar-select-large\">\r\n\t\t\t\t\t\t\t<option value=\"\"></option>\r\n{#if quadrantIds}\r\n\t{#each quadrantIds as it}\r\n\t\t\t\t\t\t\t\t\t<option value=\"{it.id}\"> {it.title}</option>\r\n\t{/each}\r\n{/if}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gmx-sidebar-label-medium\">Список объектов</div>\r\n\t\t\t<div class=\"forest-features-block\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<div class=\"gmx-geometry-select-container\"><button on:click=\"startDrawing(event)\" class=\"gmx-sidebar-button\">{drawstart ? 'Полигон рисуется' :'Выделите участки полигоном'}</button></div>\r\n\t\t\t\t\t<div class=\"gmx-sidebar-label-medium\">Выделено: {Object.keys(checked).length} / {layerItems.length}</div>\r\n\t\t\t\t\t<Table items=\"{layerItems}\" hashCols=\"{hashCols}\" bind:checked />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"gmx-button-container\">\r\n{#if report}\r\n\t\t\t\t<button class=\"gmx-sidebar-button-disabled\"><div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div></button>\r\n{:else}\r\n\t\t\t\t<button on:click=\"sendReport()\" class=\"gmx-sidebar-button{Object.keys(checked).length ? '' : '-disabled'}\">Создать отчеты</button>\r\n{/if}\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t</div>\r\n{/if}\r\n</div>\r\n\r\n<style>\r\n.loadState {\r\n    transform: rotate(90deg);\r\n    right: 14px;\r\n    position: absolute;\r\n\tcursor: pointer;\r\n}\r\n.loadState:after {\r\n\tcontent: 'storage';\r\n}\r\n.disabled {\r\n\tpointer-events: none;\r\n\tcolor:#efefef;\r\n\tcursor:default\r\n}\r\n\r\n.clearState {\r\n    right: 24px;\r\n    position: absolute;\r\n\tcursor: pointer;\r\n}\r\n.clearState:after {\r\n\tcontent: 'delete';\r\n}\r\n.material-icons {\r\n\tfont-family: 'Material Icons';\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-size: 16px;\r\n    letter-spacing: normal;\r\n    text-transform: none;\r\n    display: inline-block;\r\n    white-space: nowrap;\r\n    word-wrap: normal;\r\n    direction: ltr;\r\n    -webkit-font-smoothing: antialiased;\r\n}\r\n\r\n.line-block {\r\n    margin-top: 20px;\r\n    padding: 0px 12px;\r\n    font-size: 13px;\r\n    line-height: 31px;\r\n    font-family: \"Arial\";\r\n    color: #777f85;\r\n}\r\n.line-block input {\r\n\tposition: relative;\r\n    top: 2px;\r\n}\r\n\n.gmx-button-container {width:100%;height:40px;margin:10px 0}\n.gmx-button-container  button {display:block;margin:0 auto}\n\r\n.gmx-sidebar-select-medium ,\r\n.gmx-sidebar-select-large {\r\n\tbox-sizing:border-box;\r\n\twidth:100px;\r\n\theight:33px;\r\n\tpadding:0 8px;\r\n\tborder-radius:3px;\r\n\tbackground-color:#f7fbff;\r\n\tborder:1px solid #d7e1e7;\r\n\tfont-family:Arial;\r\n\tfont-size:13px;\r\n\tfont-weight:400;\r\n\tcolor:#5b7284;\r\n}\n\r\n.gmx-sidebar-select-medium {\r\n\twidth:200px;\r\n\theight:30px;\r\n\tfloat:right;\r\n\tmargin-right:10px;\r\n\tmargin-top:5px;\r\n\r\n\ttext-align:left;\r\n\tpadding-right:40px;\r\n\toverflow:hidden;\r\n\ttext-overflow:ellipsis\r\n}\n.gmx-sidebar-select-large {\r\n\twidth:100%;\r\n}\n\r\n.gmx-select-layer-container {width:100%;height:40px;background-color:#ebf1f5;border-bottom:1px solid #bbb}\n.gmx-select-layer-container__label {width:30%;height:22px;padding:0 10px;font-size:16px;font-weight:400;line-height:31px;color:#5b7284;font-family:Arial;color:#5b7284;font-size:15px;font-weight:600;line-height:38px;text-align:left}\n\n.forest-plugin-container {font-family:\"Roboto\";border-collapse:collapse;padding-bottom:17px}\n.forest-plugin-header {height:40px;line-height:40px;padding-left:10px;background-color:#ebf1f5;font-size:18px;font-weight:bold;color:#5b7284;font-family:Arial;color:#181f25;font-size:15px;font-weight:600;text-align:left;border-bottom:1px solid #bbb}\n.gmx-sidebar-labeled-block {margin-top:4px;padding:0 10px;width:auto;display:grid;text-align:left}\n.forest-features-block {padding:0 10px}\n.forest-plugin-content {width:100%;height:90%;background-color:#f5f8fa;overflow:hidden}\n\r\n.forest-plugin-container  select {\r\n\tborder:1px solid rgba(27, 68, 97, 0.3);\r\n\toutline:0px;-moz-appearance:none;\r\n\t-webkit-appearance:none;appearance:none;\r\n\tbackground:url(./sort-down.png) no-repeat right #FFF;\r\n\tbackground-position-x:98%\r\n}\n.forest-plugin-container  select :-moz-focusring{color:transparent;text-shadow:0 0 0 #000}\n.forest-plugin-container  option :not(:checked){color:#49677d}\n\r\n.gmx-geometry-select-container {width:100%;height:40px}\n.gmx-geometry-select-container  button {display:block;margin:0 auto;width:100%;margin-top:15px;font-family:Arial;color:#5b7284;font-size:14px;font-weight:500;line-height:31.249px;text-align:center;border:1px solid rgba(27, 68, 97, 0.3);background:url(./ext/polygon.png) no-repeat #d8e1e8;background-position:4%;padding-left:30px;transition:all 0.25s ease}\n.gmx-geometry-select-container  button :hover{box-shadow:0 2px 3px rgba(0, 0, 0, 0.2)}\n.gmx-sidebar-input-large {\r\n\twidth:100%;\r\n\tbackground:#FFF;\r\n\tborder:1px solid rgba(27, 68, 97, 0.3);\r\n\tfont-family:Arial;\r\n\tcolor:#5b7284;\r\n\tfont-size:13px;\r\n\tfont-weight:400;\r\n\tline-height:31.249px;\r\n\ttext-align:left\r\n}\n.gmx-sidebar-label ,.gmx-sidebar-label-medium ,.gmx-sidebar-label-small {font-size:13px;line-height:31px;font-family:\"Arial\";padding-left:0px;color:#777f85}\n.gmx-sidebar-label-medium {font-size:16px;font-family:Arial;color:#5b7284;font-size:16px;font-weight:600;line-height:31.249px;text-align:left;top:10px;position:relative;padding-bottom:10px;padding-left:10px}\n.gmx-sidebar-label-small {font-size:13px}\n\r\n.gmx-sidebar-button ,.gmx-sidebar-button-toggled ,.gmx-sidebar-button-error ,.gmx-sidebar-button-disabled {border-radius:3px;padding:0 6px;border:1px solid #d7e1e7;cursor:pointer;background-color:#5baceb;width:94%;height:47px;color:#FFF;font-family:Arial;font-size:17px;font-weight:600}\n.gmx-sidebar-button :focus,.gmx-sidebar-button-toggled :focus,.gmx-sidebar-button-error :focus,.gmx-sidebar-button-disabled :focus{outline:none}\n.gmx-sidebar-button-toggled {box-shadow:inset 0 1px 4px rgba(27, 31, 35, 0.55)}\n.gmx-sidebar-button-error {color:red}\n.gmx-sidebar-button-disabled {pointer-events:none;background-color:#efefef;cursor:default}\n\r\n\r\n</style>\r\n",
    "\r\n<script>\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tsortType: 'desc',\t// 'asc'\r\n\t\t\tsortKey: 'gmx_id',\t// 'FRSTAT'\r\n\t\t\treverse: false,\r\n\t\t\tpageCurr: 1,\r\n\t\t\tpagesize: 15,\r\n\t\t\tpageFrom: 0,\r\n\t\t\ttableItems: [],\r\n\t\t\titems: [],\r\n\t\t\t// checked: {},\r\n\t\t\thashCols: []\r\n\t\t};\r\n\t},\r\n\tmethods: {\r\n\t\tsort(key) {\r\n\t\t\tconst { sortType } = this.get();\r\n\t\t\t// console.log('sort', sortType);\r\n\t\t\tthis.set({sortType: sortType === 'desc' ? 'asc' : 'desc', sortKey: key});\r\n\t\t\tthis.setCurrPage(1);\r\n\t\t},\r\n\t\tcheckReverse(ev) {\r\n\t\t\t// console.log('checkReverse', ev.ctrlKey);\r\n\r\n\t\t\tlet nChecked = {};\r\n\t\t\tlet ctrlKey = ev.ctrlKey;\r\n\t\t\tlet isChecked = ev.target.checked;\r\n\t\t\t\r\n\t\t\tif (ctrlKey || isChecked) {\r\n\t\t\t\tconst { items, hashCols, checked } = this.get();\r\n\t\t\t\tlet nm = hashCols.gmx_id;\r\n\t\t\t\titems.forEach((it) => {\r\n\t\t\t\t\tlet id = it[nm];\r\n\t\t\t\t\tif (!ctrlKey || !checked[id]) {\r\n\t\t\t\t\t\tnChecked[id] = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.set({checked: nChecked});\r\n\t\t\t// this.root.set({checked: nChecked});\r\n\t\t},\r\n\t\tcheckMe(id) {\r\n\t\t\t// console.log('checkMe', id);\r\n\t\t\tconst { checked } = this.get();\r\n\t\t\tif (checked[id]) {\r\n\t\t\t\tdelete checked[id];\r\n\t\t\t} else {\r\n\t\t\t\tchecked[id] = true;\r\n\t\t\t}\r\n\t\t\tthis.set({checked: checked});\r\n\t\t\t// this.root.set({checked: checked});\r\n\t\t},\r\n\t\tsortMe(arr, sortKey, hashCols, sortType) {\r\n\t\t\tlet nm = hashCols[sortKey];\r\n\t\t\treturn arr.sort((a, b) => {\r\n\t\t\t\tlet x = b[nm];\r\n\t\t\t\tlet y = a[nm];\r\n                return (x < y ? -1 : (x > y ? 1 : 0)) * (sortType === 'desc' ? -1 : 1);\r\n\t\t\t});\r\n\t\t},\r\n\t\tpageTo(nm) {\r\n\t\t\tconst { pageFrom } = this.get();\r\n\t\t\tthis.set({pageCurr: nm});\r\n\t\t\tnm = nm < 1 ? 1 : (nm > pageFrom ? pageFrom : nm);\r\n\t\t\tthis.setCurrPage(nm);\r\n\t\t\treturn nm;\r\n\t\t},\r\n\t\tviewItem(id) {\r\n\t\t\tthis.root.viewItem(id);\r\n\t\t},\r\n\t\tsetCurrPage(nm) {\r\n\t\t\t// console.log('setCurrPage', nm);\r\n\t\t\tconst { items, hashCols, pageCurr, pagesize, sortKey, sortType } = this.get();\r\n\t\t\tnm = nm || pageCurr;\r\n\t\t\tconst beg = pagesize * (nm - 1);\r\n\r\n\t\t\tlet arr = (sortKey ? this.sortMe(items, sortKey, hashCols, sortType) : items)\r\n\t\t\t\t.slice(beg, beg + pagesize);\r\n\r\n\t\t\tconst cnt = items.length / pagesize;\r\n\t\t\tconst pf = Math.floor(cnt);\r\n\t\t\t// console.log('setCurrPage1', nm, arr, cnt);\r\n\t\t\tthis.set({tableItems: arr, pageCurr: nm, pageFrom: pf + (cnt > pf ? 1 : 0)});\r\n\t\t}\r\n\t},\r\n\tonstate({ changed, current, previous }) {\r\n\t\t// console.log('Table in onstate', changed, current);\r\n\t\tif (changed.items && current.items.length) {\r\n\t\t\tthis.setCurrPage();\r\n\t\t}\r\n\t// },\r\n\r\n\t// onupdate({ changed, current, previous }) {\r\n\t\t// console.log('Table  in onupdate', changed);\r\n\t}\r\n};\r\n</script>\r\n\r\n<div class=\"tableContect\">\r\n\t<table class=\"table\">\r\n\t\t<tr class=\"head\">\r\n\t\t\t<th class=\"c1\"><input on:click=\"checkReverse(event)\" checked=\"{reverse}\" type=\"checkbox\" value=\"on\"></th>\r\n\t\t\t<th on:click=\"sort('gmx_id')\"\r\n\t\t\t\tclass=\"c2 sorting \r\n\t\t\t\t\t{ sortKey === 'gmx_id' ?\r\n\t\t\t\t\t\t(sortType === 'desc' ? 'sorting-desc' : 'sorting-asc')\r\n\t\t\t\t\t\t: '' }\r\n\t\t\t\t\t\">\r\n\t\t\t\t<span>Id</span>\r\n\t\t\t</th>\r\n\t\t\t<th on:click=\"sort('FRSTAT')\"\r\n\t\t\t\tclass=\"c3 sorting \r\n\t\t\t\t\t{ sortKey === 'FRSTAT' ?\r\n\t\t\t\t\t\t(sortType === 'desc' ? 'sorting-desc' : 'sorting-asc')\r\n\t\t\t\t\t\t: '' }\r\n\t\t\t\t\t\">\r\n\t\t\t\t<span>Статус</span>\r\n\t\t\t</th>\r\n\t\t</tr>\r\n{#each tableItems as it}\r\n\t\t<tr class=\"item\">\r\n\t\t\t<td class=\"c1\"><input on:change=\"checkMe(it[hashCols.gmx_id])\" checked=\"{checked[it[hashCols.gmx_id]]}\" type=\"checkbox\"></td>\r\n\t\t\t<td class=\"c2\"><span>{it[hashCols.gmx_id]}</span></td>\r\n\t\t\t<td class=\"c3\"><span class=\"status {it[hashCols.FRSTAT] > 0 ? 'checked' : ''}\"></span><span on:click=\"viewItem(it[hashCols.gmx_id])\" class=\"leaflet-gmx-iconSvg svgIcon\"><svg class=\"svgIcon\"><use xlink:href=\"#zoom-to-feature\"></use></svg></span></td>\r\n\t\t</tr>\r\n{/each}\r\n\t\t<tr class=\"pagination\">\r\n\t\t\t<td colspan=\"3\">\r\n\t\t\t\t<button on:click=\"pageTo(pageCurr - 1)\" disabled=\"{ pageCurr === 1 }\">назад</button>\r\n\t\t\t\t<span class=\"pageInfo\">Стр. <input on:change=\"pageTo(this.value)\" type=\"number\" value=\"{ pageCurr }\" /> из { pageFrom }</span>\r\n\t\t\t\t<button on:click=\"pageTo(pageCurr + 1)\" disabled=\"{ pageFrom === pageCurr }\">вперед</button>\r\n\t\t\t\t<div class=\"-loading\">\r\n\t\t\t\t\t<div class=\"-loading-inner\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t</table>\r\n</div>\r\n\r\n\r\n<style>\r\n\r\n.tableContect  table {table-layout:fixed;border:1px solid #d7e1e7;width:100%}\n.tableContect  tr :nth-child(odd){background-color:lavender}\n.tableContect  th {cursor:pointer;height:30px;border-right:1px solid #d7e1e7;border-bottom:1px solid #d7e1e7}\n.tableContect  th.sorting :after,.tableContect  th.sorting-asc :after{font-family:'Material Icons';font-weight:normal;font-style:normal;font-size:16px;line-height:1;letter-spacing:normal;text-transform:none;display:inline-block;white-space:nowrap;word-wrap:normal;transform:rotate(90deg);direction:ltr;-webkit-font-smoothing:antialiased;content:\"arrow_back\";visibility:hidden}\r\n.tableContect  th.sorting-asc ,.tableContect  th.sorting-desc {color:rgba(0, 0, 0, 0.87)}\r\n.tableContect  th.sorting-asc :after{transform:rotate(-90deg)}\r\n.tableContect  th.sorting :hover,.tableContect  th.sorting-asc :after,.tableContect  th.sorting-desc :after{visibility:visible}\r\n\r\n.tableContect  th.c3 {border-right:inherit;width:70px}\r\n.tableContect  .c1 {width:20px;text-align:center}\n.tableContect  .c3 {text-align:center}\n.tableContect  input {vertical-align:sub}\n.tableContect  span.status {width:8px;height:8px;display:inline-block;border-radius:50%;background-color:#f96060;margin-bottom:3px}\n.tableContect  span.status.checked {background-color:#4de371}\n.tableContect  .leaflet-gmx-iconSvg {margin-top:-3px;float:inherit;display:inline-block;box-shadow:inherit;height:16px}\n.tableContect  .leaflet-gmx-iconSvg svg {height:16px}\n\r\n.pagination  button {padding:4px;cursor:pointer}\r\n.pagination  button :disabled{cursor:default}\r\n.tableContect  .pagination td {text-align:center;font-family:Arial;border-top:1px solid #d7e1e7;padding:10px}\n.tableContect  .pagination input {width:60px;text-align:center;vertical-align:inherit}\n.tableContect  .pagination .pageInfo {margin:2px}\n\r\n</style>\r\n",
    "\r\n<script>\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tkey: '',\r\n\t\t\tcols: []\r\n\t\t};\r\n\t},\r\n\tcomputed: {\r\n\t\tvalue: ({ key, changedParams }) => {\r\n\t\t\tlet it = changedParams ? changedParams[key] : {};\r\n\t\t\treturn it && it.value || '';\r\n\t\t},\r\n\t\tcolName: ({ key, changedParams }) => {\r\n\t\t\tlet it = changedParams ? changedParams[key] : {};\r\n\t\t\treturn it && it.field || '';\r\n\t\t},\r\n\t\tisClicked: ({ key, changedParams }) => {\r\n\t\t\tlet it = changedParams ? changedParams[key] : {};\r\n\t\t\treturn it && it.field || false;\r\n\t\t},\r\n\t\ttitle: ({ key, params }) => { let it = params[key]; return it.title || it.value; }\r\n\t},\r\n\tmethods: {\r\n\t\tsetSelection(val) {\r\n\t\t\tconst { key, changedParams } = this.get();\r\n// console.log(colName, `___ setSelection ______`, key, val, changedParams);\r\n\t\t\tchangedParams[key] = {value: '', field: val};\r\n\t\t\tthis.set({changedParams: changedParams});\r\n\t\t},\r\n\t\tsetValue(val, fieldFlag) {\r\n\t\t\tconst { key, changedParams } = this.get();\r\n\t\t\tchangedParams[key] = {value: !fieldFlag ? val : '', field: fieldFlag ? val : ''};\r\n\t\t\tthis.set({changedParams: changedParams});\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<div class=\"gmx-sidebar-labeled-block\">\r\n\t<div class=\"gmx-sidebar-label\">{title}</div>\r\n\t<div>\r\n\t\t<div>\r\n\t\t\t{#if isClicked}\r\n\t\t\t\t<select on:change=\"setSelection(event.target.options[event.target.selectedIndex].value)\" ref:sel class=\"gmx-sidebar-select-with-addon\">\r\n\t\t\t\t\t{#each cols as it}\r\n\t\t\t\t\t\t<option value=\"{it}\" selected=\"{colName === it}\">{it}</option>\r\n\t\t\t\t\t{/each}\r\n\t\t\t\t</select>\r\n\t\t\t\t<button on:click=\"setValue('')\" class=\"gmx-addon-button\" title=\"выбрать из таблицы атрибутов\"></button>\r\n\t\t\t{:else}\r\n\t\t\t\t<input on:change=\"setValue(event.target.value)\" type=\"text\" ref:inp class=\"gmx-sidebar-input-with-addon\" value=\"{value}\">\r\n\t\t\t\t<button on:click=\"setValue(cols[0], true)\" class=\"gmx-addon-button\" title=\"выбрать из таблицы атрибутов\"></button>\r\n\t\t\t{/if}\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<style>\r\n\r\n.gmx-sidebar-labeled-block {margin-top:4px;padding:0 10px;width:auto;display:grid;text-align:left}\n.gmx-sidebar-label {font-size:13px;line-height:31px;font-family:\"Arial\";padding-left:0px;color:#777f85}\n.gmx-sidebar-select ,.gmx-sidebar-select-with-addon {box-sizing:border-box;width:100px;height:33px;padding:0 8px;border-radius:3px;background-color:#f7fbff;border:1px solid #d7e1e7}\n.gmx-sidebar-select-with-addon {display:table-cell;float:left;width:85%;border-top-right-radius:0;border-bottom-right-radius:0;font-family:Arial;color:#5b7284;font-size:13px;font-weight:400}\n.gmx-sidebar-input ,.gmx-sidebar-input-with-addon {box-sizing:border-box;width:100px;height:33px;padding:0 8px;border-radius:3px;background:#FFF;border:1px solid rgba(27, 68, 97, 0.3);font-family:Arial;color:#5b7284;font-size:13px;font-weight:400}\n.gmx-sidebar-input-with-addon {display:table-cell;float:left;width:85%;border-top-right-radius:0;border-bottom-right-radius:0}\n.gmx-addon-button {padding:0 6px;box-sizing:border-box;width:15%;height:33px;display:table-cell;vertical-align:middle;background-color:#d7e1e7;border:none;border-radius:0 3px 3px 0;cursor:pointer;background:url(./list.png) no-repeat right #d8e1e8;background-position-x:50%;border-right:1px solid rgba(27, 68, 97, 0.3);border-top:1px solid rgba(27, 68, 97, 0.3);border-bottom:1px solid rgba(27, 68, 97, 0.3)}\r\n.gmx-addon-button :focus{outline:none}\r\n\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}